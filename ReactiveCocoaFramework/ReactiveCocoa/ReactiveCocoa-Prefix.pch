//
// Prefix header for all source files of the 'ReactiveCocoa' target in the 'ReactiveCocoa' project
//

#ifdef __OBJC__
	#import <Foundation/Foundation.h>

	#ifdef DEBUG
		void rac_dispatch_async(dispatch_queue_t queue, dispatch_block_t block);
		void rac_dispatch_barrier_async(dispatch_queue_t queue, dispatch_block_t block);
		void rac_dispatch_after(dispatch_time_t time, dispatch_queue_t queue, dispatch_block_t block);
		void rac_dispatch_async_f(dispatch_queue_t queue, void *context, dispatch_function_t function);
		void rac_dispatch_barrier_async_f(dispatch_queue_t queue, void *context, dispatch_function_t function);
		void rac_dispatch_after_f(dispatch_time_t time, dispatch_queue_t queue, void *context, dispatch_function_t function);

		#define dispatch_async(...) \
			rac_dispatch_async(__VA_ARGS__)

		#define dispatch_barrier_async(...) \
			rac_dispatch_barrier_async(__VA_ARGS__)

		#define dispatch_after(...) \
			rac_dispatch_after(__VA_ARGS__)

		#define dispatch_async_f(...) \
			rac_dispatch_async_f(__VA_ARGS__)

		#define dispatch_barrier_async_f(...) \
			rac_dispatch_barrier_async_f(__VA_ARGS__)

		#define dispatch_after_f(...) \
			rac_dispatch_after_f(__VA_ARGS__)
	#endif
#endif

#undef NSAssert
#undef NSParameterAssert

extern void NSAssert(int condition, ...) __attribute__((unavailable("Use NSCAssert instead.")));
extern void NSParameterAssert(int condition, ...) __attribute__((unavailable("Use NSCParameterAssert instead.")));
